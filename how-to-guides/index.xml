<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Project Tetra – How-To Guides</title><link>https://tetrabiodistributed.github.io/tetra/how-to-guides/</link><description>Recent content in How-To Guides on Project Tetra</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://tetrabiodistributed.github.io/tetra/how-to-guides/index.xml" rel="self" type="application/rss+xml"/><item><title>How-to-Guides: Contributing to Documentation</title><link>https://tetrabiodistributed.github.io/tetra/how-to-guides/external-guides/contributing-to-documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tetrabiodistributed.github.io/tetra/how-to-guides/external-guides/contributing-to-documentation/</guid><description>
&lt;div class="paragraph">
&lt;div class="pageinfo pageinfo-primary">
&lt;div class="paragraph">
&lt;p>These guidelines assume that you’re familiar with the GitHub workflow.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_how_to_contribute">How to Contribute&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>All submissions, including submissions by project members, require review.
We use GitHub pull requests for this purpose.
Consult &lt;a href="https://help.github.com/articles/about-pull-requests/">GitHub Help&lt;/a> for more information on using pull requests.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_creating_an_issue">Creating an issue&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>If you’ve found a problem in the docs, please create an issue in the &lt;a href="https://github.com/tetrabiodistributed/project-tetra-docs/issues">Project Tetra docs repo&lt;/a>. You can also create an issue about a specific page by clicking the &lt;strong>Create documentation issue&lt;/strong> button in the top right hand corner of the page.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_updating_the_site">Updating the site&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Here’s a quick guide to updating the site:&lt;/p>
&lt;/div>
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Create a new branch, or checkout an existing branch, in the &lt;a href="https://github.com/tetrabiodistributed/project-tetra-docs">Project Tetra docs repo&lt;/a>. The branch name should be prepended with its associated issue label followed by a &lt;code>/&lt;/code>, followed by a &lt;code>dash-separated&lt;/code> description of the changes to be made, followed by its associated issue number, e.g., &lt;code>feature/add-tricoder-with-touchscreen-docs-1701&lt;/code>. If no such issue exists, &lt;a href="#_creating_an_issue">create a new issue&lt;/a>.&lt;/p>
&lt;div class="paragraph">
&lt;p>Note: If you haven’t been added as a collaborator to the &lt;a href="https://github.com/tetrabiodistributed/project-tetra-docs">Project Tetra docs repo&lt;/a>, you will need to either fork the repo or contact the repo admin to request write access. The repo admin can be contacted via the HelpfulEngineering slack group on the &lt;a href="https://app.slack.com/client/TUTSYURT3/C0103QJMA84">#project-tetra&lt;/a> channel.&lt;/p>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Commit your changes and create a pull request (PR). Be sure to include a closing keyword followed by the associated issue number in the PR description, e.g., &lt;code>closes #1701&lt;/code>. If the pull request closes multiple issues, add a closing keyword for each issue. (See &lt;a href="https://docs.github.com/en/enterprise/2.16/user/github/managing-your-work-on-github/closing-issues-using-keywords">closing issues using keywords&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you’re not yet ready for a review, mark the PR as &lt;em>Draft&lt;/em> to indicate it’s a work in progress. Continue updating your doc and pushing your changes until you’re happy with the content.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When you’re ready for a review, mark the PR as &lt;em>Ready for review&lt;/em>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Once your PR is merged, you may safely delete your branch.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_updating_a_single_page">Updating a single page&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>If you’ve just spotted something you’d like to change while using the docs, Docsy has a shortcut for you:&lt;/p>
&lt;/div>
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Click &lt;strong>Edit this page&lt;/strong> in the top right hand corner of the page. The appropriate page will be displayed in edit mode.&lt;/p>
&lt;div class="paragraph">
&lt;p>Note: If you haven’t been added as a collaborator, you will be prompted to fork the repo or update your fork of the repo - click &lt;strong>Fork this repository and propose changes&lt;/strong> or &lt;strong>Update your Fork&lt;/strong> to get an up to date version of the project to edit.&lt;/p>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Follow the rest of the &lt;a href="#_updating_the_site">Updating the site&lt;/a> process to propose your changes.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_running_the_website_locally">Running the website locally&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>You can run your own Hugo server using docker to preview the site locally:&lt;/p>
&lt;/div>
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Install &lt;a href="https://www.docker.com/">docker&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Clone the &lt;a href="https://github.com/tetrabiodistributed/project-tetra-docs">Project Tetra docs repo&lt;/a>. Don’t forget to use &lt;code>--recurse-submodules&lt;/code> or you won’t pull down some of the code you need to generate a working site.&lt;/p>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="highlight">&lt;code class="language-bash" data-lang="bash">git clone --recurse-submodules https://github.com/tetrabiodistributed/project-tetra-docs.git
cd project-tetra-docs&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Note: If you accidentally cloned without using &lt;code>--recurse-submodules&lt;/code>, you can run &lt;code>git submodule update --init --recursive&lt;/code> to pull down submodules needed to generate a working site.&lt;/p>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Run the &lt;code>build.sh&lt;/code> script in the site root directory (Note: Linux users may need to prepend this command &lt;code>sudo&lt;/code>). This will build a docker image, as well as install node modules, needed to locally run the &lt;code>project-tetra-docs&lt;/code> Hugo webserver. Once the image is built and stored on your machine, you do not need to rerun this step. You can view all locally installed images by running &lt;code>docker images&lt;/code>.&lt;/p>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="highlight">&lt;code class="language-bash" data-lang="bash">./build.sh&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Run the &lt;code>serve.sh&lt;/code> script in the site root directory (Note: Linux users may need to prepend this command &lt;code>sudo&lt;/code>). By default, your site will be available at &lt;code>http://localhost:1313/project-tetra-docs&lt;/code>.&lt;/p>
&lt;div class="listingblock">
&lt;div class="content">
&lt;pre class="highlight">&lt;code class="language-bash" data-lang="bash">./serve.sh&lt;/code>&lt;/pre>
&lt;/div>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Now that you’re serving your site locally, Hugo will watch for changes to the content and automatically refresh your site.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_useful_resources">Useful resources&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.docsy.dev/docs/">Docsy user guide&lt;/a>: All about Docsy, including how it manages navigation, look and feel, and multi-language support.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://gohugo.io/documentation/">Hugo documentation&lt;/a>: Comprehensive reference for Hugo.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://guides.github.com/activities/hello-world/">Github Hello World!&lt;/a>: A basic introduction to GitHub concepts and workflow.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>How-to-Guides: Writing Documentation</title><link>https://tetrabiodistributed.github.io/tetra/how-to-guides/internal-guides/writing-documentation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tetrabiodistributed.github.io/tetra/how-to-guides/internal-guides/writing-documentation/</guid><description>
&lt;div class="sect1">
&lt;h2 id="_how_to_write_good_documentation">How to write good documentation&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>There are four types of documentation: &lt;a href="https://documentation.divio.com/tutorials">Tutorials&lt;/a>, &lt;a href="https://documentation.divio.com/how-to-guides/">How-To Guides&lt;/a>, &lt;a href="https://documentation.divio.com/reference/">References&lt;/a>, and &lt;a href="https://documentation.divio.com/explanation/#">Explanations&lt;/a>.
Consult the &lt;a href="https://documentation.divio.com/">The Documentation System&lt;/a> for:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://documentation.divio.com/tutorials/#how-to-write-good-tutorials">How to write good tutorials&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://documentation.divio.com/how-to-guides/#how-to-write-good-how-to-guides">How to write good how-to guides&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://documentation.divio.com/reference/#how-to-write-good-reference-guides">How to write good reference guides&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://documentation.divio.com/explanation/#how-to-write-good-explanation">How to write good explanation&lt;/a>&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>How-to-Guides: Change Management</title><link>https://tetrabiodistributed.github.io/tetra/how-to-guides/internal-guides/change-management/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tetrabiodistributed.github.io/tetra/how-to-guides/internal-guides/change-management/</guid><description>
&lt;div class="paragraph">
&lt;div class="pageinfo pageinfo-primary">
&lt;div class="paragraph">
&lt;p>These guidelines assume that you’re familiar with the GitHub workflow.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_how_to_use_the_kanban_board">How to use the kanban board&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Assign yourself to a new or existing card or issue in the &lt;a href="https://github.com/orgs/tetrabiodistributed/projects/1">Project Tetra - kanban board&lt;/a>. Consult the GitHub project admin for access, if needed.&lt;/p>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>Documentation related issues should be created in the &lt;a href="https://github.com/tetrabiodistributed/project-tetra-docs/issues">Project Tetra docs issues&lt;/a> and added to the &lt;a href="https://github.com/orgs/tetrabiodistributed/projects/1">Project Tetra - kanban board&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Source code related issues should be created in the &lt;a href="https://github.com/tetrabiodistributed/project-tetra/issues">Project Tetra issues&lt;/a> and added to the &lt;a href="https://github.com/orgs/tetrabiodistributed/projects/1">Project Tetra - kanban board&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Non-documentation or source code related issues should be added as a card to the &lt;a href="https://github.com/orgs/tetrabiodistributed/projects/1">Project Tetra - kanban board&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Record relevant discussions in the comment section of the GitHub issues.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_creating_an_issue">Creating an issue&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>If you’ve found a problem in the docs, please create an issue in the &lt;a href="https://github.com/tetrabiodistributed/project-tetra-docs/issues">Project Tetra docs repo&lt;/a>. You can also create an issue about a specific page by clicking the &lt;strong>Create documentation issue&lt;/strong> button in the top right hand corner of the page.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_how_to_make_documentation_changes">How to make documentation changes&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Create a new branch, or checkout an existing branch, in the &lt;a href="https://github.com/tetrabiodistributed/project-tetra-docs">Project Tetra docs repo&lt;/a>. The branch name should be prepended with its associated issue label followed by a &lt;code>/&lt;/code>, followed by a &lt;code>dash-separated&lt;/code> description of the changes to be made, followed by its associated issue number, e.g., &lt;code>feature/add-tricoder-with-touchscreen-docs-1701&lt;/code>. If no such issue exists, &lt;a href="#_creating_an_issue">create a new issue&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Write or update the appropriate documentation page relevant to the design changes to be made in your working branch. All documentation should be nested under &lt;a href="../../tutorials">Tutorials&lt;/a>, &lt;a href="../../how-to-guides">How-To Guides&lt;/a>, &lt;a href="../../explanations">Explanations&lt;/a>, and/or &lt;a href="../../references">References&lt;/a>. (See &lt;a href="#_how_to_write_good_documentation">How to write good documentation&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Commit your changes and create a pull request (PR). Be sure to include a closing keyword followed by the associated issue number in the PR description, e.g., &lt;code>closes #1701&lt;/code>. If the pull request closes multiple issues, add a closing keyword for each issue. (See &lt;a href="https://docs.github.com/en/enterprise/2.16/user/github/managing-your-work-on-github/closing-issues-using-keywords">closing issues using keywords&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you’re not yet ready for a review, mark the PR as &lt;em>Draft&lt;/em> to indicate it’s a work in progress. Continue updating your doc and pushing your changes until you’re happy with the content.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When you’re ready for a review, mark the PR as &lt;em>Ready for review&lt;/em>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Once your PR is merged, you may safely delete your branch.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_how_to_make_design_changes">How to make design changes&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Design changes include changes to CAD, STL, Drawings, or software.&lt;/p>
&lt;/div>
&lt;div class="olist arabic">
&lt;ol class="arabic">
&lt;li>
&lt;p>Update any relevant documentation if the design changes to be made require a change in tutorials, how-to guides, references or explanations. Update documentation before making changes to stay in line with the DDD process. (See &lt;a href="#_how_to_make_documentation_changes">How to make documentation changes&lt;/a>)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a new branch, or checkout an existing branch, in the &lt;a href="https://github.com/tetrabiodistributed/project-tetra">Project Tetra repo&lt;/a>. The branch name should be prepended with its associated issue label followed by a &lt;code>/&lt;/code>, followed by a &lt;code>dash-separated&lt;/code> description of the changes to be made, followed by its associated issue number, e.g., &lt;code>add-tricoder-with-touchscreen-1031&lt;/code>. If no such issue exists, create a new issue in the &lt;a href="https://github.com/tetrabiodistributed/project-tetra/issues">Project Tetra issues&lt;/a>.&lt;/p>
&lt;div class="paragraph">
&lt;p>Note: Part number revisions and version releases should accompany a design change where appropriate. (See &lt;a href="../version_control/">Version Control&lt;/a>)&lt;/p>
&lt;/div>
&lt;/li>
&lt;li>
&lt;p>Commit your changes and create a pull request (PR). Be sure to include a closing keyword followed by the associated issue number in the PR description, e.g., &lt;code>closes #1031&lt;/code>. If the pull request closes multiple issues, add a closing keyword for each issue. (See &lt;a href="https://docs.github.com/en/enterprise/2.16/user/github/managing-your-work-on-github/closing-issues-using-keywords">closing issues using keywords&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you’re not yet ready for a review, mark the PR as &lt;em>Draft&lt;/em> to indicate it’s a work in progress. Continue updating your doc and pushing your changes until you’re happy with the content.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>When you’re ready for a review, mark the PR as &lt;em>Ready for review&lt;/em>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Once your PR is merged, you may safely delete your branch.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_useful_resources">Useful resources&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>&lt;a href="https://www.docsy.dev/docs/">Docsy user guide&lt;/a>: All about Docsy, including how it manages navigation, look and feel, and multi-language support.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://gohugo.io/documentation/">Hugo documentation&lt;/a>: Comprehensive reference for Hugo.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;a href="https://guides.github.com/activities/hello-world/">Github Hello World!&lt;/a>: A basic introduction to GitHub concepts and workflow.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;/div>
&lt;/div></description></item><item><title>How-to-Guides: Version Control</title><link>https://tetrabiodistributed.github.io/tetra/how-to-guides/internal-guides/version-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tetrabiodistributed.github.io/tetra/how-to-guides/internal-guides/version-control/</guid><description>
&lt;div class="sect1">
&lt;h2 id="_how_to_document_a_part_number_release">How to document a part number release&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Part numbers for CAD, STL, &amp;amp; drawings should adopt the following naming convention:&lt;/p>
&lt;/div>
&lt;div class="literalblock">
&lt;div class="content">
&lt;pre>A-TET-ZZZZZZ-R = Assembly
ZZZZZZ-R is Assembly Number &amp;amp; Revision
P-TET-ZZZZZZ-R = Part
ZZZZZZ-R is Part Number &amp;amp; Revision
M-YYY-ZZZZZ = Buy Part, M = Manufacturer, YYY = manufacturer code (ex, UNI = Unistrut)
ZZZZZ = Manufacturer part number
V-XXX-ZZZZZ = OTS part, V = Vendor, XXX = vendor code (ex, MCM = McMaster-Carr)
ZZZZ = Vendor part number&lt;/pre>
&lt;/div>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Note: In the event there is a design change to an interface used in an existing part, it is recommended to designate an entirely new part number, as opposed to bumping its revision number.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="sect1">
&lt;h2 id="_how_to_document_a_version_release">How to document a version release&lt;/h2>
&lt;div class="sectionbody">
&lt;div class="paragraph">
&lt;p>Changes to a software version (i.e., a software release) should be reflected in the CHANGELOG file, located in the root directory in the &lt;a href="https://github.com/tetrabiodistributed/project-tetra">Project Tetra repo&lt;/a>. Software releases should also be &lt;a href="https://help.github.com/en/github/administering-a-repository/managing-releases-in-a-repository">tagged&lt;/a> and follow the &lt;a href="https://semver.org/">semantic versioning&lt;/a> system.&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div></description></item></channel></rss>